// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id               Int      @id @default(autoincrement())
  name             String?
  email            String   @unique
  username         String   @unique
  passwordHash     String
  refreshTokenHash String?
  roleId           Int      @default(2)
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt

  role     Role      @relation(fields: [roleId], references: [id], onDelete: SetDefault)
  listings Listing[]

  @@map("users")
}

model Listing {
  id          Int      @id @default(autoincrement())
  title       String
  price       Decimal
  description String?
  userId      Int
  categoryId  Int
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  author        User            @relation(fields: [userId], references: [id])
  category      Category        @relation(fields: [categoryId], references: [id])
  listingImages ListingImages[]

  @@map("listings")
}

model ListingImages {
  id            Int      @id @default(autoincrement())
  imageLocation String
  listingId     Int
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  listing Listing @relation(fields: [listingId], references: [id], onDelete: Cascade)

  @@map("listing_images")
}

model Category {
  id          Int      @id @default(autoincrement())
  name        String   @unique
  description String?
  iconClass   String?  @unique
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  listings Listing[]

  @@map("categories")
}

model Role {
  id        Int      @id @default(autoincrement())
  name      String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  users User[]

  @@map("roles")
}
